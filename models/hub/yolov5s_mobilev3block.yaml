# YOLOv5 🚀 by Ultralytics, GPL-3.0 license

# Parameters
nc: 11  # number of classes
depth_multiple: 0.33  # model depth multiple
width_multiple: 0.50  # layer channel multiple
anchors:
  - [10,13, 16,30, 33,23]  # P3/8
  - [30,61, 62,45, 59,119]  # P4/16
  - [116,90, 156,198, 373,326]  # P5/32

# YOLOv5 v6.0 backbone
backbone:
  # [from, number, module, args]                    
  # MobileNetV3-large
  # [from, number, module, args]
  [[-1, 1, conv_bn_hswish, [16, 2]],   # 0-p1/2 #tag:在[16,2]中不懂什么意思可以conv_bn_hswish这个类实例化(构建这个模块)，需要哪些参数。查看没有上一层输出的通道数，因为来自上一层，是一个常量
   [-1, 1, MobileNet_Block, [ 16,  16, 3, 1, 0, 0]],  # 1-p1/2 分别是[out_channel, hidden_dim, kernel_size, stride, use_se, use_hs]
   [-1, 1, MobileNet_Block, [ 24,  64, 3, 2, 0, 0]],  # 2-p2/4
   [-1, 1, MobileNet_Block, [ 24,  72, 3, 1, 0, 0]],  # 3-p2/4
   [-1, 1, MobileNet_Block, [ 40,  72, 5, 2, 1, 0]],  # 4-p3/8
   [-1, 1, MobileNet_Block, [ 40, 120, 5, 1, 1, 0]],  # 5-p3/8
   [-1, 1, MobileNet_Block, [ 40, 120, 5, 1, 1, 0]],  # 6-p3/8
   [-1, 1, MobileNet_Block, [ 80, 240, 3, 2, 0, 1]],  # 7-p4/16
   [-1, 1, MobileNet_Block, [ 80, 200, 3, 1, 0, 1]],  # 8-p4/16
   [-1, 1, MobileNet_Block, [ 80, 184, 3, 1, 0, 1]],  # 9-p4/16
   [-1, 1, MobileNet_Block, [ 80, 184, 3, 1, 0, 1]],  # 10-p4/16
   [-1, 1, MobileNet_Block, [112, 480, 3, 1, 1, 1]],  # 11-p4/16
   [-1, 1, MobileNet_Block, [112, 672, 3, 1, 1, 1]],  # 12-p4/16
   [-1, 1, MobileNet_Block, [160, 672, 5, 1, 1, 1]],  # 13-p4/16
   [-1, 1, MobileNet_Block, [160, 960, 5, 2, 1, 1]],  # 14-p5/32   原672改为原算法960
   [-1, 1, MobileNet_Block, [160, 960, 5, 1, 1, 1]],  # 15-p5/32   #tag:通道数：为160*width_multiple;下采样成原来的1/32
  ]

# YOLOv5 v6.0 head
head:
  [[-1, 1, Conv, [512, 1, 1]],
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],    # 1/16
   [[-1, 13], 1, Concat, [1]],  # cat backbone P4 #tag:与第13层的输出相叠加，因为第13层的下采样是1/16
   [-1, 3, C3, [512, False]],  # 13

   [-1, 1, Conv, [256, 1, 1]],
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],  #1/8
   [[-1, 6], 1, Concat, [1]],  # cat backbone P3 #tag:与第6层的输出相叠加，因为第13层的下采样是1/8
   [-1, 3, C3, [256, False]],  # 17 (P3/8-small)

   [-1, 1, Conv, [256, 3, 2]],     #tag：经过了一次步长为2的卷积，所以下采样变为了原来的1/16
   [[-1, 13], 1, Concat, [1]],  # cat head P4     #tag:与第13层的输出相叠加，因为第13层的下采样是1/16
   [-1, 3, C3, [512, False]],  # 20 (P4/16-medium)

   [-1, 1, Conv, [512, 3, 2]],
   [[-1, 15], 1, Concat, [1]],  # cat head P5   #tag:与第15层的输出相叠加，因为第13层的下采样是1/32
   [-1, 3, C3, [1024, False]],  # 23 (P5/32-large)

   [[17, 20, 23], 1, Detect, [nc, anchors]],  # Detect(P3, P4, P5)
  ]
