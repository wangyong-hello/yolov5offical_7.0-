# YOLOv5 🚀 by Ultralytics, GPL-3.0 license

# Parameters
nc: 80  # number of classes
depth_multiple: 0.33  # model depth multiple,控制模型的深度
width_multiple: 0.50  # layer channel multiple，
anchors:
  - [10,13, 16,30, 33,23]  # P3/8
  - [30,61, 62,45, 59,119]  # P4/16
  - [116,90, 156,198, 373,326]  # P5/32

# YOLOv5 v6.0 backbone
backbone:
  # [from, number, module, args] 
  #tag:
  #第一个参数from：from 表示当前这个层的输入是什么，大部分为-1，表示上一层的输出作为该层的输入
  #第二个参数number:  number*depth_multiple表示模块重复多少次
  #第三个参数module：module表示这个模块的名字
  #第四个参数args：args表示通道数，卷积核个数*width_multiple，后来会在每层构建中被扩充并展开
  [[-1, 1, Conv, [64, 6, 2, 2]],  # 0-P1/2   #tag:如果这个num*depth_multiple，小于1.则最小取1，搞不懂这里为什么用这么大的卷积核kernel_size=6
   [-1, 1, Conv, [128, 3, 2]],  # 1-P2/4
   [-1, 3, C3, [128]],                    #tag：3*0.33,实际为1
   [-1, 1, Conv, [256, 3, 2]],  # 3-P3/8  
   [-1, 6, C3, [256]],                     #tag:6*0.33,实际为2
   [-1, 1, Conv, [512, 3, 2]],  # 5-P4/16
   [-1, 9, C3, [512]],
   [-1, 1, Conv, [1024, 3, 2]],  # 7-P5/32  下采样为原来的1/32大小
   [-1, 3, C3, [1024]],
   [-1, 1, SPPF, [1024, 5]],  # 9 第9层
  ]

# YOLOv5 v6.0 head
head:

#tag:第一个cat来自于下采样1/16的特征图，第二个cat来自于下采样1/8的特征图，
#tag:第三个cat来自于下采样1/16的特征图，第一个cat来自于下采样32的特征图，
  [[-1, 1, Conv, [512, 1, 1]],
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [[-1, 6], 1, Concat, [1]],  # cat backbone P4
   [-1, 3, C3, [512, False]],  # 13

   [-1, 1, Conv, [256, 1, 1]],
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [[-1, 4], 1, Concat, [1]],  # cat backbone P3
   [-1, 3, C3, [256, False]],  # 17 (P3/8-small)

   [-1, 1, Conv, [256, 3, 2]],
   [[-1, 14], 1, Concat, [1]],  # cat head P4
   [-1, 3, C3, [512, False]],  # 20 (P4/16-medium)

   [-1, 1, Conv, [512, 3, 2]],
   [[-1, 10], 1, Concat, [1]],  # cat head P5
   [-1, 3, C3, [1024, False]],  # 23 (P5/32-large)

   [[17, 20, 23], 1, Detect, [nc, anchors]],  # Detect(P3, P4, P5)
  ]
